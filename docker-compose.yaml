services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672" # RabbitMQ default port
      - "15672:15672" # Management UI (optional, helpful for debugging)
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: main_db
    ports:
      - "3307:3306"
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-prootpassword",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: user
      PMA_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 300M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      mysql:
        condition: service_healthy

  player_service:
    build: ./atomic_services/player
    restart: always
    environment:
      DATABASE_URL: mysql+mysqlconnector://user:password@mysql/player_db
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy

  room_service:
    build: ./atomic_services/room
    restart: always
    environment:
      DATABASE_URL: mysql+mysqlconnector://user:password@mysql/room_db
    ports:
      - "5016:5016"
    depends_on:
      mysql:
        condition: service_healthy

  # character_service:
  #   build: ./atomic_services/character
  #   restart: always
  #   environment:
  #     DATABASE_URL: mysql+mysqlconnector://user:password@mysql/character_db
  #   ports:
  #     - "5003:5003"
  #   depends_on:
  #     - mysql

  enemy_service:
    build: ./atomic_services/enemy
    restart: always
    environment:
      DATABASE_URL: mysql+mysqlconnector://user:password@mysql/enemy_db
    ports:
      - "5005:5005"
    depends_on:
      mysql:
        condition: service_healthy

  item_service:
    build: ./atomic_services/item
    restart: always
    environment:
      DATABASE_URL: mysql+mysqlconnector://user:password@mysql/item_db
    ports:
      - "5002:5002"
    depends_on:
      mysql:
        condition: service_healthy

  inventory_service:
    build: ./atomic_services/inventory
    restart: always
    environment:
      DATABASE_URL: mysql+mysqlconnector://user:password@mysql/inventory_db
    ports:
      - "5001:5001"
    depends_on:
      mysql:
        condition: service_healthy

  dice_service:
    build: ./atomic_services/dice
    restart: always
    ports:
      - "5007:5007"

  score_service:
    build: ./atomic_services/score
    restart: always
    environment:
      DATABASE_URL: mysql+mysqlconnector://user:password@mysql/score_db
    ports:
      - "5008:5008"
    depends_on:
      mysql:
        condition: service_healthy

  activity_log_service:
    build: ./atomic_services/activity_log
    restart: always
    environment:
      DATABASE_URL: mysql+mysqlconnector://user:password@mysql/activity_log_db
    ports:
      - "5013:5013"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  fight_enemy_service:
    build: ./composite_services/fight_enemy
    restart: always
    environment:
      PLAYER_SERVICE_URL: http://player_service:5000
      ENEMY_SERVICE_URL: http://enemy_service:5005
      DICE_SERVICE_URL: http://dice_service:5007
      SCORE_SERVICE_URL: http://score_service:5008
      ROOM_SERVICE_URL: http://room_service:5016
      ACTIVITY_LOG_SERVICE_URL: http://activity_log_service:5013
      RABBITMQ_HOST: rabbitmq
    ports:
      - "5009:5009"
    depends_on:
      - player_service
      - enemy_service
      - activity_log_service
      - dice_service
      - score_service
      - room_service

  entering_room_service:
    build: ./composite_services/entering_room
    restart: always
    environment:
      ROOM_SERVICE_URL: http://room_service:5016
      PLAYER_SERVICE_URL: http://player_service:5000
      ENEMY_SERVICE_URL: http://enemy_service:5005
      FIGHT_ENEMY_SERVICE_URL: http://fight_enemy_service:5009
      ITEM_SERVICE_URL: http://item_service:5002
      ACTIVITY_LOG_SERVICE_URL: http://activity_log_service:5013
      INVENTORY_SERVICE_URL: http://inventory_service:5001

    ports:
      - "5011:5011"
    depends_on:
      - player_service
      - enemy_service
      - fight_enemy_service
      - item_service
      - activity_log_service
      - room_service

  manage_game_service:
    build: ./composite_services/manage_game
    restart: always
    environment:
      PLAYER_SERVICE_URL: http://player_service:5000
      ENEMY_SERVICE_URL: http://enemy_service:5005
      ACTIVITY_LOG_SERVICE_URL: http://activity_log_service:5013
    ports:
      - "5014:5014"
    depends_on:
      - player_service
      - enemy_service
      - activity_log_service

  open_inventory_service:
    build: ./composite_services/open_inventory
    restart: always
    environment:
      INVENTORY_SERVICE_URL: http://inventory_service:5001
      ITEM_SERVICE_URL: http://item_service:5002
    ports:
      - "5010:5010"
    depends_on:
      - inventory_service
      - item_service

  pick_up_item_service:
    build: ./composite_services/pick_up_item
    restart: always
    environment:
      ROOM_SERVICE_URL: http://room_service:5016
      INVENTORY_SERVICE_URL: http://inventory_service:5001
      ITEM_SERVICE_URL: http://item_service:5002
      APPLY_ITEM_EFFECTS_SERVICE_URL: http://apply_item_effects_service:5025
      RABBITMQ_HOST: rabbitmq
    ports:
      - "5019:5019"
    depends_on:
      - room_service
      - inventory_service
      - item_service
      - rabbitmq
      - apply_item_effects_service

  apply_item_effects_service:
    build: ./composite_services/apply_item_effects
    restart: always
    environment:
      PLAYER_SERVICE_URL: http://player_service:5000
      ITEM_SERVICE_URL: http://item_service:5002
      RABBITMQ_HOST: rabbitmq
    ports:
      - "5025:5025"
    depends_on:
      - player_service
      - item_service
      - rabbitmq

  calculate_score_service:
    build: ./composite_services/calculate_score
    restart: always
    environment:
      SCORE_SERVICE_URL: http://score_service:5008
    ports:
      - "5015:5015"
    depends_on:
      - score_service
  # select_character_service:
  #   build: ./composite_services/select_character
  #   restart: always
  #   environment:
  #     PLAYER_SERVICE_URL: http://player_service:5000
  #   ports:
  #     - "5017:5017"
  #   depends_on:
  #     - player_service
  web_app:
    build: ./web
    restart: always
    ports:
      - "5050:5050"
    environment:
      PLAYER_SERVICE_URL: http://player_service:5000
      ENTERING_ROOM_SERVICE_URL: http://entering_room_service:5011
      FIGHT_ENEMY_SERVICE_URL: http://fight_enemy_service:5009
      OPEN_INVENTORY_SERVICE_URL: http://open_inventory_service:5010
      PICK_UP_ITEM_SERVICE_URL: http://pick_up_item_service:5019
      ROOM_SERVICE_URL: http://room_service:5016
      ITEM_SERVICE_URL: http://item_service:5002
    depends_on:
      - player_service
      - entering_room_service
      - fight_enemy_service
      - open_inventory_service
      - pick_up_item_service
      - room_service
      - item_service
